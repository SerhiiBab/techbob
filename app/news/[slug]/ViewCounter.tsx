"use client";

import { useEffect, useState } from "react";

interface ViewCounterProps {
  postId: string;
}

export default function ViewCounter({ postId }: ViewCounterProps) {
  const [views, setViews] = useState<number | null>(null);

  useEffect(() => {
    if (!postId) return;

    const wpUrl = process.env.NEXT_PUBLIC_WORDPRESS_URL;

    // 1. –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã
    fetch(`${wpUrl}/wp-json/post-views-counter/view`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id: postId }),
    }).catch(console.error);

    // 2. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
    fetch(`${wpUrl}/wp-json/post-views-counter/views?id=${postId}`)
      .then((res) => res.json())
      .then((data) => {
        // –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ –ø–ª–∞–≥–∏–Ω–∞
        // –æ–±—ã—á–Ω–æ data.count –∏–ª–∏ data.views
        setViews(data.count ?? data.views ?? 0);
      })
      .catch(() => setViews(0));
  }, [postId]);

  if (views === null) return null;

  return (
    <p className="text-sm text-gray-400 mb-2">
      üëÅ {views} Aufrufe
    </p>
  );
}
